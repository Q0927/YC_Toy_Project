define DEBUG_RF_INIT
define SECURE_CONNECTION
define SIMPLE_PAIRING
define REVD
define ROMCODE
define PATCH
define SDKCODE
INCLUDE "bt_format"
org 0x0000  // start from patch ram address start

define P_ADC_ENABLE
//define P_TIMER_DEMO

//define P_LPM
//define FCC_AUTH

define G24_ACK_DISABLE
define G24_TX
define UART_INIT
define DBG_LOG_TX


define G24_ACK_DISABLE
define G24_RX
//define UART_INIT
//define DBG_LOG_RX



	bbit1 8,pf_patch_ext
	beq patch10_2,p_shutdown_radio
	beq patch11_3,p_initialize_radio_cont
	beq patch15_5, p_app_init
	branch p_patch

pf_patch_ext:
	rtneq patch3f_7
	beq patch26_0,p_vdd_calculate_by_mode
	beq patch32_2,p_timer_init
	beq patch32_3,p_timer_check
	beq patch33_4,p_le_slave_match
	beq patch33_6,p_le_slave_unsync
	beq patch34_3,p_le_enable_phy_by_pdata
	beq patch35_4,p_le_receive_on_attempt
	branch p_patch_ext


p_idle_process:



        call enable_adc
        call vdd_calculate_by_mode
        store 2, mem_adc_voltage_result    //sample:0x5a0(decimal: 1440).It means that voltage is 1.44V.
	branch p_idle_process_ext



p_cb_event_timer:
	branch p_cb_event_timer_ext

	

























p_app_init_clear_memalloc:
	arg mem_memalloc_start, contw
	arg mem_memalloc_start, temp
	arg mem_memalloc_end, pdata
	isub temp, loopcnt
	branch clear_mem



p_app_init:
//	setarg mem_context
//	call ice_set_write_bp
	call p_ldo_abb_en_init
	call enable_authrom
	
	call p_app_init_clear_memalloc


	call p_mesh_uart_init




    	 jam ADC_CONFIG_GPIO, mem_adc_config_flag
        jam ADC_CHANNEL, mem_adc_channel
        call p_adc_init_data
	branch p_app_init_ext























p_mesh_uart_init:
	call p_mesh_uart_init_buffer
	arg UART_BAUD,temp
	call uartb_calc_baud_rate_config
	call mesh_uart_init+7
p_uart_gpio_set_init:
	jam gpcfg_uartb_txd,core_gpio_conf+UART_TX_GPIO
	jam gpcfg_uartb_rxd|gpcfg_pullup,core_gpio_conf+UART_RX_GPIO
	rtn


p_mesh_uart_init_buffer:
	setarg mem_uart_rx_buffer
	store 2,mem_pdatatemp
	setarg mem_uart_rx_buffer_end
	istore 2,contw
	setarg mem_uart_tx_buffer
	istore 2,contw
	setarg mem_uart_tx_buffer_end
	istore 2,contw
	fetch 8,mem_pdatatemp
	branch uartb_init_dma_mem



//input:rega is tx data ptr
//loopcnt is tx data length
//regb is logging type




p_24g_recv_ack_log:
	arg mem_24g_rxbuf+2, rega
	fetch 1, mem_24g_rxbuf+1
	rshift3 pdata, loopcnt
	arg LOGGING_TYPE_24G_RECV_ACK, regb
	branch logging_tx_info	


p_gpio_config_output:
	setflip 7, temp
	branch gpio_config_output


p_pwm_disable:
	fetch 1,core_pwm_en
   	qset0 pdata
   	store 1,core_pwm_en
	rtn









p_initialize_radio_cont:
	jam 0x10,0x896f
	jam 0,core_syn_loopdiv_dsm_cfg
	jam 0x03,core_rx_lna_cfg3
	branch initialize_radio_cont+1

p_le_enable_phy_by_pdata:
	copy temp,pdata
	bbit1 BIT_LE_1M_PHY,le_enable
	bbit1 BIT_LE_2M_PHY,le_enable_2M
	bbit0 BIT_LE_CODED_PHY,le_enable
	bbit1 BIT_LE_CODED_PHY_S8,p_le_enable_coded_s8
	bbit1 BIT_LE_CODED_PHY_S2,le_enable_coded_s2
	branch le_enable
	
p_le_enable_coded_s8:
	call p_le_enable_coded
	set1 mark_ble_lr_s8,mark
	rtn
p_le_enable_coded:
	call le_enable
	set1 mark_ble_lr,mark
	set0 mark_ble_lr_s8,mark
	jam 0x05,0x8901
	jam 0x80,0x8920
	jam 0x24,0x8930
	jam 0x0a,0x8934
	rtn

//timer ROM bugfix
p_timer_init:
	fetch 4,mem_last_clkn_temp
	store 4,mem_last_clkn
	rtn

p_timer_check:
	fetcht 4,mem_last_clkn
	rshift clkn_bt,pdata
	store 4,mem_last_clkn_temp
	branch timer_check+3



p_ldo_abb_en_init:
	 fetch 1, core_rf_ldo_en0
	 set1 3, pdata
	 store 1, core_rf_ldo_en0
	 nop 1200
	 set0 3, pdata
	 store 1, core_rf_ldo_en0
	 rtn

p_shutdown_radio:
	call rf_debug_shutdown_radio_line	//L-H-L
	force 0x08,radio_ctrl
	force 0,radio_ctrl
	disable is_rx
	disable is_tx
	pulse packet_end
	jam 0x5,modem_en
	nop 2
	jam 0x0,modem_en
	call set_sync_on
	jam 0,core_syn_en
	jam 0x80,core_rf_ldo_en0
	fetch 1,core_clkpll_cfg6
	set0 7,pdata
	store 1,core_clkpll_cfg6
	jam 0,core_rf_ldo_en1
	branch gain_control

p_le_slave_match:
	fetch 1,mem_le_md_count
	pincrease 1
	store 1,mem_le_md_count
	beq LE_MD_MAX_COUNT,le_slave_cont
	call le_acknowledge
	call le_prepare_tx
	fetch 1,mem_le_tx_phy
	call le_enable_phy_by_pdata
	call le_transmit
	branch le_slave_match+10
	

p_le_slave_unsync:
	call end_of_packet
	call le_lpm_set_mult
	branch calc_clke_offset


p_le_receive_on_attempt:
	enable swfine
	arg PARAM_T_IFS_150US+PARAM_20MS_INIT+PARAM_SYNC_TIME_DIFFERENCE,temp
	fetch 1,mem_system_clk
	imul32 temp,temp
	rshift pdata,pdata
	iadd temp,stop_watch
	branch le_receive_on_attempt+6
	
p_adc_init_data:
	rtn wake
	setarg OTP_OFFSET_ADC_PARAM
	branch adc_init_data+2


p_vdd_calculate_by_mode:
	fetch 1,mem_adc_config_flag
	beq ADC_CONFIG_VINLPM,vdd_calculate_vinlpm
	beq ADC_CONFIG_HVIN,vdd_calculate_hvin
	beq ADC_CONFIG_GPIO,p_vdd_calculate_io
	rtn


p_vdd_calculate_io:
        setarg 2000
	store 2,mem_reference_voltage //diff
	fetcht 2,mem_3v_adc_io_data
	fetch 2,mem_1v_adc_io_data
	arg 3000,regc //max vol
	branch p_vdd_calculate


p_vdd_calculate:
	isub temp,rega
	fetch 2,mem_adc_current_value
	isub temp,pdata
	nbranch vdd_calculate1,positive
	fetcht 2,mem_reference_voltage
	imul32 temp,regb
	copy regc,pdata
	imul32 rega,pdata
	isub regb,pdata	
	nbranch set_pdata_0, positive   //adc在测0v电压时会超量程。这里做个异常判断
	branch vdd_calculate2








p_patch:
	branch loop

p_patch_ext:
	branch loop

p_idle_process_ext:
	call g24_sim_tx_with_datalen_set
	call g24_recved_ack_parse

	call g24_sim_rx
	call g24_rx_parse
	rtn

p_cb_event_timer_ext:
	call p_24g_tx_state_timer
	rtn







g24_sim_rx:
	fetch 1, mem_le_24g_rx_enable
	rtn blank
	set1 mark_24g_rxmode,mark
	setarg 0x7530   //2.5ms
	store 2, mem_24g_rx_window
	jam 1,mem_24g_ackpayload_enable
	
	fetch 1,mem_24g_rx_phy
	call le_enable_phy_by_pdata
	call g24_syncword_crc8
	call g24_receive_transmit_ack+1
	call g24_read_len_pid_crc
	call g24_end_of_packet
	nrtn user3
g24_sim_rx_success:	
	jam 1, mem_le_24g_rx_recv_flag
	rtn

p_cb_24g_ackpayload:
	jam LEN_OF_ACK_PAYLOAD, mem_24g_datalen
	setarg 0x111111
	store 3, mem_24g_txbuf
	rtn


g24_rx_parse:
	fetch 1, mem_le_24g_rx_recv_flag
	rtn blank
	jam 0, mem_le_24g_rx_recv_flag
	rtn





g24_sim_tx_with_datalen_set:	
	fetch 1, mem_le_24g_tx_enable
	rtn blank
	set0 mark_24g_rxmode,mark
	jam 2, mem_24g_datalen
	branch g24_sim_tx
g24_sim_tx:
	fetch 1,mem_24g_tx_phy
	call le_enable_phy_by_pdata
	call g24_syncword_crc8
	jam 0x88,mem_rssi_hex
	call g24_transmit_prep
	call g24_transmit_receive_ack
	call g24_end_of_packet
	fetch 1,mem_24g_no_ack	//tx noack
	beq no_ack_24g,p_g24_transmit_no_ack
	nbranch p_g24_transmit_no_ack, user3    //if(user3 == 0) means a invaild packet.
	nbranch p_g24_transmit_no_ack,sync
	call p_24g_recved_ack
p_g24_transmit_no_ack:	
	random pdata 
	arg 0x1ff,temp
	iand temp,pdata
	add pdata,250,pdata
	branch delay
	
p_24g_recved_ack:
	jam 1, mem_le_24g_recv_ack_flag
	rtn

g24_recved_ack_parse:
	fetch 1, mem_le_24g_recv_ack_flag
	rtn blank
	jam 0, mem_le_24g_recv_ack_flag
	rtn



	
p_24g_tx_state_timer_init:
	setarg 10
	store 2, mem_le_24g_tx_state_timeout
	rtn

p_24g_tx_state_timer:
	arg mem_le_24g_tx_state_timeout,regc
	arg p_24g_tx_state_timeout, regb
	branch timer_single_step_2B
p_24g_tx_state_timeout:
	call p_24g_tx_state_timer_init

	fetch 1, mem_le_24g_tx_enable
	beq 1, p_24g_tx_disable
	jam 1, mem_le_24g_tx_enable
	fetch 2, mem_24g_txbuf
	pincrease 1
	store 2, mem_24g_txbuf
	rtn	

p_24g_tx_disable:	
	jam 0, mem_le_24g_tx_enable
	rtn
	









p_app_init_ext:
//
	setarg p_idle_process
	store 2,mem_cb_idle_process

	setarg p_cb_event_timer
	store 2,mem_cb_event_timer

	setarg p_cb_24g_ackpayload
	store 2, mem_cb_24g_ackpayload
//	

	jam CMD_G24ACK_DISABLE, mem_24g_no_ack

	jam 1, mem_le_24g_rx_enable

	call p_24g_tx_state_timer_init
	rtn
	

